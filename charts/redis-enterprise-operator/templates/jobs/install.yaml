apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-enterprise-installer
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis-enterprise
  annotations:
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: redis-enterprise-installer
  labels:
    app: redis-enterprise
  annotations:
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "get", "update"]
{{- if .Values.admission.limitToNamespace }}
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["patch"]
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: redis-enterprise-installer
  labels:
    app: redis-enterprise
  annotations:
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redis-enterprise-installer
subjects:
- kind: ServiceAccount
  name: redis-enterprise-installer
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-enterprise-installer
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis-enterprise
  annotations:
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  backoffLimit: 5  # Retry up to 5 times in case of failure
  template:
    metadata:
      labels:
        app: redis-enterprise
    spec:
      containers:
      - name: install-crds
        image: {{ include "redis-enterprise-operator.operator.image" . | printf "%s" | trim }}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
        command:
        - install-helper
        args:
        - -action=applyCRD
        - -crdPaths=/crds/rec_crd.yaml,/crds/redb_crd.yaml,/crds/reaadb_crd.yaml,/crds/rerc_crd.yaml
        - -operatorVersion={{ .Chart.AppVersion }}
        - -helmChartVersion={{ .Chart.Version }}
      {{- if .Values.admission.limitToNamespace }}
      - name: label-namespace
        image: {{ include "redis-enterprise-operator.operator.image" . | printf "%s" | trim }}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
        command:
        - install-helper
        args:
        - -action=patchNamespace
        - -namespace={{ .Release.Namespace }}
      {{- end }}
      serviceAccountName: redis-enterprise-installer
      restartPolicy: OnFailure
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
      - name: {{ . }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
